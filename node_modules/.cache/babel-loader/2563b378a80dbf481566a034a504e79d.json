{"ast":null,"code":"import \"antd/lib/checkbox/style\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\\\u5355\\u8F66\\u540E\\u53F0\\u7BA1\\u7406\\u7CFB\\u7EDF\\u5F00\\u53D1\\\\imoocmanager\\\\src\\\\pages\\\\form\\\\login.js\";\nimport React from 'react';\nconst FormItem = _Form.Item;\n\nclass Formlogin extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = () => {\n      let userInfo = this.props.form.getFieldsValue();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          _message.success(\"\\u7528\\u6237\\u540D:\".concat(userInfo.userName, \", \\u5BC6\\u7801:\").concat(userInfo.userPwd));\n        }\n      });\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(_Card, {\n      title: \"\\u767B\\u5F55\\u884C\\u5185\\u8868\\u5355\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(_Form, {\n      layout: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"\\u767B\\u5F55\")))), React.createElement(_Card, {\n      title: \"\\u767B\\u5F55\\u6C34\\u5E73\\u8868\\u5355\",\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(_Form, {\n      style: {\n        width: 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, getFieldDecorator('userName', {\n      initialValue: '',\n      rules: [{\n        required: true,\n        message: '用户名不能为空'\n      }, {\n        min: 5,\n        max: 10,\n        message: '长度不再范围内'\n      }, {\n        pattern: /^\\w+$/g,\n        message: '用户名必须为字母或数字'\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }),\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, getFieldDecorator('userPwd', {\n      initialValue: '',\n      rules: []\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"lock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, getFieldDecorator('remember', {\n      valuePropName: 'checked',\n      initialValue: true,\n      rules: []\n    })(React.createElement(_Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"\\u8BB0\\u4F4F\\u5BC6\\u7801\")), React.createElement(\"a\", {\n      href: \"#\",\n      style: {\n        float: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"\\u5FD8\\u8BB0\\u5BC6\\u7801\")), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"\\u767B\\u5F55\")))));\n  }\n\n}\n\nexport default _Form.create()(Formlogin);","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\单车后台管理系统开发\\imoocmanager\\src\\pages\\form\\login.js"],"names":["React","FormItem","Item","Formlogin","Component","handleSubmit","userInfo","props","form","getFieldsValue","validateFields","err","values","success","userName","userPwd","render","getFieldDecorator","marginTop","width","initialValue","rules","required","message","min","max","pattern","valuePropName","float","create"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,QAAQ,GAAG,MAAKC,IAAtB;;AACA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAEtCC,YAFsC,GAEvB,MAAM;AACnB,UAAIC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,EAAf;AACA,WAAKF,KAAL,CAAWC,IAAX,CAAgBE,cAAhB,CAA+B,CAACC,GAAD,EAAKC,MAAL,KAAgB;AAC7C,YAAG,CAACD,GAAJ,EAAS;AACP,mBAAQE,OAAR,8BAAuBP,QAAQ,CAACQ,QAAhC,4BAAgDR,QAAQ,CAACS,OAAzD;AACD;AACF,OAJD;AAKD,KATqC;AAAA;;AAUtCC,EAAAA,MAAM,GAAG;AAAA,UACAC,iBADA,GACqB,KAAKV,KAAL,CAAWC,IADhC,CACAS,iBADA;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,KAAK,EAAC,sCAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,MAAM,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,WAAW,EAAC,sCAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,WAAW,EAAC,gCAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,EAOE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAPF,CADF,CADF,EAcE;AAAM,MAAA,KAAK,EAAC,sCAAZ;AAAqB,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC;AAAX,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIF,iBAAiB,CAAC,UAAD,EAAY;AAC3BG,MAAAA,YAAY,EAAE,EADa;AAE3BC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,EAKL;AACEC,QAAAA,GAAG,EAAC,CADN;AACQC,QAAAA,GAAG,EAAC,EADZ;AAEEF,QAAAA,OAAO,EAAE;AAFX,OALK,EASL;AACEG,QAAAA,OAAO,EAAC,QADV;AAEEH,QAAAA,OAAO,EAAC;AAFV,OATK;AAFoB,KAAZ,CAAjB,CAgBG;AAAO,MAAA,MAAM,EAAE;AAAM,QAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AAAqC,MAAA,WAAW,EAAC,sCAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBH,CAFJ,CADF,EAsBE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIN,iBAAiB,CAAC,SAAD,EAAW;AAC1BG,MAAAA,YAAY,EAAC,EADa;AAE1BC,MAAAA,KAAK,EAAE;AAFmB,KAAX,CAAjB,CAGG;AAAO,MAAA,MAAM,EAAE;AAAM,QAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AAAqC,MAAA,IAAI,EAAC,UAA1C;AAAqD,MAAA,WAAW,EAAC,gCAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CAFJ,CAtBF,EA8BE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIJ,iBAAiB,CAAC,UAAD,EAAY;AAC3BU,MAAAA,aAAa,EAAE,SADY;AAE3BP,MAAAA,YAAY,EAAE,IAFa;AAG3BC,MAAAA,KAAK,EAAE;AAHoB,KAAZ,CAAjB,CAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCALF,CAFJ,EAUE;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,KAAK,EAAE;AAACO,QAAAA,KAAK,EAAC;AAAP,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAVF,CA9BF,EA0CE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,KAAKvB,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CA1CF,CADF,CAdF,CADF;AAiED;;AA7EqC;;AA+ExC,eAAe,MAAKwB,MAAL,GAAc1B,SAAd,CAAf","sourcesContent":["import React from 'react'\r\nimport {Card, Form, Input, Button, message, Icon, Checkbox} from 'antd'\r\n\r\nconst FormItem = Form.Item\r\nclass Formlogin extends React.Component {\r\n\r\n  handleSubmit = () => {\r\n    let userInfo = this.props.form.getFieldsValue()\r\n    this.props.form.validateFields((err,values) => {\r\n      if(!err) {\r\n        message.success(`用户名:${userInfo.userName}, 密码:${userInfo.userPwd}`)\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form \r\n    return (\r\n      <div>\r\n        <Card title=\"登录行内表单\"  >\r\n          <Form layout=\"inline\">\r\n            <FormItem>\r\n              <Input placeholder=\"请输入用户名\"/>\r\n            </FormItem>\r\n            <FormItem>\r\n              <Input placeholder=\"请输入密码\"/>\r\n            </FormItem>\r\n            <FormItem>\r\n              <Button type=\"primary\">登录</Button>\r\n            </FormItem>\r\n          </Form>\r\n        </Card>\r\n        <Card title=\"登录水平表单\" style={{marginTop:10}}>\r\n          <Form style={{width:300}}>\r\n            <FormItem>\r\n              {\r\n                getFieldDecorator('userName',{\r\n                  initialValue: '',\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '用户名不能为空'\r\n                    },\r\n                    {\r\n                      min:5,max:10,\r\n                      message: '长度不再范围内'\r\n                    },\r\n                    {\r\n                      pattern:/^\\w+$/g,\r\n                      message:'用户名必须为字母或数字'\r\n                    }\r\n                  ]\r\n                })(<Input prefix={<Icon type=\"user\" />} placeholder=\"请输入用户名\"/>)\r\n              }\r\n            </FormItem>\r\n            <FormItem>\r\n              {\r\n                getFieldDecorator('userPwd',{\r\n                  initialValue:'',\r\n                  rules: []\r\n                })(<Input prefix={<Icon type=\"lock\" />} type=\"password\" placeholder=\"请输入密码\"/>)\r\n              }\r\n            </FormItem>\r\n            <FormItem>\r\n              {\r\n                getFieldDecorator('remember',{\r\n                  valuePropName: 'checked',\r\n                  initialValue: true,\r\n                  rules: []\r\n                })(\r\n                  <Checkbox>记住密码</Checkbox>\r\n                )\r\n              }\r\n              <a href=\"#\" style={{float:'right'}}>忘记密码</a>\r\n            </FormItem>\r\n            <FormItem>\r\n              <Button type=\"primary\" onClick={this.handleSubmit}>登录</Button>\r\n            </FormItem>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Form.create()(Formlogin)"]},"metadata":{},"sourceType":"module"}