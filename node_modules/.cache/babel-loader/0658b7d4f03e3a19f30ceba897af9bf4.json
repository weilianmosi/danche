{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport JsonP from 'jsonp';\nimport axios from 'axios';\nimport Utils from './../utils/utils.js';\nexport default class Axios {\n  static requestList(_this, url, params, isMock) {\n    var data = {\n      params: params,\n      isMock\n    };\n    this.ajax({\n      url: url,\n      data: data\n    }).then(data => {\n      if (data && data.result) {\n        let list = data.result.item_list.map((item, index) => {\n          item.key = index;\n          return item;\n        });\n\n        _this.setState({\n          list,\n          pagination: Utils.pagination(data, current => {\n            _this.params.page = current;\n\n            _this.requestList();\n          })\n        });\n      }\n    });\n  }\n\n  static jsonp(options) {\n    return new Promise((resolve, reject) => {\n      JsonP(options.url, {\n        param: 'callback'\n      }, function (err, response) {\n        if (response.status === 'success') {\n          resolve(response);\n        } else {\n          reject(response.messsage);\n        }\n      });\n    });\n  }\n\n  static ajax(options) {\n    let loading;\n\n    if (options.data && options.data.isShowLoading !== false) {\n      loading = document.getElementById('ajaxLoading');\n      loading.style.display = 'block';\n    }\n\n    let baseApi = 'https://www.easy-mock.com/mock/5a7278e28d0c633b9c4adbd7/api';\n    return new Promise((resolve, reject) => {\n      axios({\n        url: options.url,\n        method: 'get',\n        baseURL: baseApi,\n        timeout: 5000,\n        params: options.data && options.data.params || ''\n      }).then(response => {\n        if (options.data && options.data.isShowLoading !== false) {\n          loading = document.getElementById('ajaxLoading');\n          loading.style.display = 'none';\n        }\n\n        if (response.status === 200) {\n          let res = response.data;\n\n          if (res.code == 0) {\n            resolve(res);\n          } else {\n            _Modal.info({\n              title: '提示',\n              content: res.msg\n            });\n          }\n        } else {\n          reject(response.data);\n        }\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\单车后台管理系统开发\\imoocmanager\\src\\axios\\index.js"],"names":["JsonP","axios","Utils","Axios","requestList","_this","url","params","isMock","data","ajax","then","result","list","item_list","map","item","index","key","setState","pagination","current","page","jsonp","options","Promise","resolve","reject","param","err","response","status","messsage","loading","isShowLoading","document","getElementById","style","display","baseApi","method","baseURL","timeout","res","code","info","title","content","msg"],"mappings":"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","sourcesContent":["import JsonP from 'jsonp'\r\nimport axios from 'axios'\r\nimport { Modal } from 'antd';\r\nimport Utils from './../utils/utils.js'\r\n\r\nexport default class Axios {\r\n  \r\n  static requestList(_this,url,params,isMock){\r\n    var data = {\r\n      params: params,\r\n      isMock\r\n    }\r\n    this.ajax({\r\n      url: url,\r\n      data: data\r\n    }).then((data) => {\r\n      if(data && data.result) {\r\n        let list = data.result.item_list.map((item, index) => {\r\n          item.key = index;\r\n          return item;\r\n        });\r\n        _this.setState({\r\n          list,\r\n          pagination: Utils.pagination(data, (current) => {\r\n            _this.params.page = current;\r\n            _this.requestList();\r\n          })\r\n        })\r\n      }\r\n    })\r\n  }\r\n  static jsonp(options) {\r\n    return new Promise((resolve, reject) => {\r\n        JsonP(options.url, {\r\n            param: 'callback'\r\n        }, function (err, response) {   \r\n            if (response.status === 'success') {\r\n                resolve(response);\r\n            } else {\r\n                reject(response.messsage);\r\n            }\r\n        })\r\n    })\r\n  } \r\n  static ajax(options) {\r\n    let loading\r\n    if(options.data && options.data.isShowLoading !== false) {\r\n        loading = document.getElementById('ajaxLoading')\r\n        loading.style.display = 'block'\r\n    }\r\n    let baseApi = 'https://www.easy-mock.com/mock/5a7278e28d0c633b9c4adbd7/api'\r\n\r\n    return new Promise((resolve,reject) => {\r\n        axios({\r\n            url:options.url,\r\n            method: 'get',\r\n            baseURL:baseApi,\r\n            timeout: 5000,\r\n            params: (options.data && options.data.params) || '',\r\n\r\n        }).then((response) => {\r\n            if(options.data && options.data.isShowLoading !== false) {\r\n              loading = document.getElementById('ajaxLoading')\r\n              loading.style.display = 'none'\r\n            }\r\n            if(response.status === 200) {\r\n                let res = response.data \r\n                if(res.code == 0) {\r\n                    resolve(res)\r\n                } else {\r\n                    Modal.info({\r\n                        title: '提示',\r\n                        content: res.msg\r\n                    })\r\n                }\r\n            } else {\r\n                reject(response.data)\r\n            }\r\n        })\r\n    })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}