{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\\\u5355\\u8F66\\u540E\\u53F0\\u7BA1\\u7406\\u7CFB\\u7EDF\\u5F00\\u53D1\\\\imoocmanager\\\\src\\\\pages\\\\order\\\\index.js\";\nimport React from 'react';\nimport axios from '../../axios';\nimport Utils from '../../utils/utils';\nimport BaseForm from '../../components/BaseForm';\nconst FormItem = _Form.Item;\nconst Option = _Select.Option;\nexport default class Order extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderInfo: {},\n      orderConfirmVisble: false\n    };\n    this.params = {\n      page: 1\n    };\n    this.formList = [{\n      type: 'SELECT',\n      label: '城市',\n      field: 'city',\n      placeholder: '全部',\n      initialValue: '1',\n      width: 80,\n      list: [{\n        id: '0',\n        name: '全部'\n      }, {\n        id: '1',\n        name: '北京'\n      }, {\n        id: '2',\n        name: '天津'\n      }, {\n        id: '3',\n        name: '上海'\n      }]\n    }, {\n      type: '时间查询'\n    }, {\n      type: 'SELECT',\n      label: '订单状态',\n      field: 'order_status',\n      placeholder: '全部',\n      initialValue: '1',\n      width: 80,\n      list: [{\n        id: '0',\n        name: '全部'\n      }, {\n        id: '1',\n        name: '进行中'\n      }, {\n        id: '2',\n        name: '结束行程'\n      }]\n    }];\n\n    this.handleFilter = params => {\n      this.params = params;\n      this.requestList();\n    };\n\n    this.requestList = () => {\n      axios.requestList(this, '/order/list', this.params, true); // axios.ajax({\n      //     url:'/order/list',\n      //     data:{\n      //         params: this.params\n      //     }\n      // }).then((res)=>{\n      //     let list = res.result.item_list.map((item, index) => {\n      //         item.key = index;\n      //         return item;\n      //     });\n      //     this.setState({\n      //         list,\n      //         pagination: Utils.pagination(res, (current) => {\n      //             _this.params.page = current;\n      //             _this.requestList();\n      //         })\n      //     })\n      // })\n    };\n\n    this.handleConfirm = () => {\n      let item = this.state.selectedItem;\n\n      if (!item) {\n        _Modal.info({\n          title: '信息',\n          content: '请选择一条订单进行结束'\n        });\n\n        return;\n      }\n\n      axios.ajax({\n        url: '/order/ebike_info',\n        data: {\n          params: {\n            orderId: item.id\n          }\n        }\n      }).then(res => {\n        if (res.code == 0) {\n          this.setState({\n            orderInfo: res.result,\n            orderConfirmVisble: true\n          });\n        }\n      });\n    };\n\n    this.handleFinishOrder = () => {\n      let item = this.state.selectedItem;\n      axios.ajax({\n        url: '/order/finish_order',\n        data: {\n          params: {\n            orderId: item.id\n          }\n        }\n      }).then(res => {\n        if (res.code == 0) {\n          _message.success('订单结束成功');\n\n          this.setState({\n            orderConfirmVisble: false\n          });\n          this.requestList();\n        }\n      });\n    };\n\n    this.onRowClick = (record, index) => {\n      let selectKey = [index];\n      this.setState({\n        selectedRowKeys: selectKey,\n        selectedItem: record\n      });\n    };\n\n    this.openOrderDetail = () => {\n      let item = this.state.selectedItem;\n\n      if (!item) {\n        _Modal.info({\n          title: '信息',\n          content: '请先选择一条订单'\n        });\n\n        return;\n      }\n\n      window.open(\"/#/common/order/detail/\".concat(item.id), '_blank');\n    };\n  }\n\n  componentDidMount() {\n    this.requestList();\n  }\n\n  render() {\n    const columns = [{\n      title: '订单编号',\n      dataIndex: 'order_sn'\n    }, {\n      title: '车辆编号',\n      dataIndex: 'bike_sn'\n    }, {\n      title: '用户名',\n      dataIndex: 'user_name'\n    }, {\n      title: '手机号',\n      dataIndex: 'mobile'\n    }, {\n      title: '里程',\n      dataIndex: 'distance',\n\n      render(distance) {\n        return distance / 1000 + 'Km';\n      }\n\n    }, {\n      title: '行驶时长',\n      dataIndex: 'total_time'\n    }, {\n      title: '状态',\n      dataIndex: 'status'\n    }, {\n      title: '开始时间',\n      dataIndex: 'start_time'\n    }, {\n      title: '结束时间',\n      dataIndex: 'end_time'\n    }, {\n      title: '订单金额',\n      dataIndex: 'total_fee'\n    }, {\n      title: '实付金额',\n      dataIndex: 'user_pay'\n    }];\n    const formItemLayout = {\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 19\n      }\n    };\n    const selectedRowKeys = this.state.selectedRowKeys;\n    const rowSelection = {\n      type: 'radio',\n      selectedRowKeys\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(_Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(BaseForm, {\n      formList: this.formList,\n      filterSubmit: this.handleFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    })), React.createElement(_Card, {\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.openOrderDetail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"\\u8BA2\\u5355\\u8BE6\\u60C5\"), React.createElement(_Button, {\n      type: \"primary\",\n      style: {\n        marginLeft: 10\n      },\n      onClick: this.handleConfirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"\\u7ED3\\u675F\\u8BA2\\u5355\")), React.createElement(\"div\", {\n      className: \"content-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      bordered: true,\n      columns: columns,\n      dataSource: this.state.list,\n      pagination: this.state.pagination,\n      rowSelection: rowSelection,\n      onRow: (record, index) => {\n        return {\n          onClick: () => {\n            this.onRowClick(record, index);\n          }\n        };\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    })), React.createElement(_Modal, {\n      title: \"\\u7ED3\\u675F\\u8BA2\\u5355\",\n      visible: this.state.orderConfirmVisble,\n      onCancel: () => {\n        this.setState({\n          orderConfirmVisble: false\n        });\n      },\n      onOk: this.handleFinishOrder,\n      width: 600,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(_Form, {\n      layout: \"horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(FormItem, Object.assign({\n      label: \"\\u8F66\\u8F86\\u7F16\\u53F7\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), this.state.orderInfo.bike_sn), React.createElement(FormItem, Object.assign({\n      label: \"\\u5269\\u4F59\\u7535\\u91CF\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), this.state.orderInfo.battery + '%'), React.createElement(FormItem, Object.assign({\n      label: \"\\u884C\\u7A0B\\u5F00\\u59CB\\u65F6\\u95F4\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), this.state.orderInfo.start_time), React.createElement(FormItem, Object.assign({\n      label: \"\\u5F53\\u524D\\u4F4D\\u7F6E\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), this.state.orderInfo.location))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\单车后台管理系统开发\\imoocmanager\\src\\pages\\order\\index.js"],"names":["React","axios","Utils","BaseForm","FormItem","Item","Option","Order","Component","state","orderInfo","orderConfirmVisble","params","page","formList","type","label","field","placeholder","initialValue","width","list","id","name","handleFilter","requestList","handleConfirm","item","selectedItem","info","title","content","ajax","url","data","orderId","then","res","code","setState","result","handleFinishOrder","success","onRowClick","record","index","selectKey","selectedRowKeys","openOrderDetail","window","open","componentDidMount","render","columns","dataIndex","distance","formItemLayout","labelCol","span","wrapperCol","rowSelection","marginTop","marginLeft","pagination","onClick","bike_sn","battery","start_time","location"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Card, Button, Table, Form, Select, Modal, DatePicker, message} from 'antd'\r\nimport axios from '../../axios'\r\nimport Utils from '../../utils/utils'\r\nimport BaseForm from '../../components/BaseForm'\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nexport default class Order extends React.Component{\r\n    state  = {\r\n        orderInfo:{},\r\n        orderConfirmVisble:false\r\n    }\r\n    params = {\r\n        page: 1\r\n    }\r\n    formList = [\r\n        {\r\n            type:'SELECT',\r\n            label:'城市',\r\n            field:'city',\r\n            placeholder:'全部',\r\n            initialValue:'1',\r\n            width:80,\r\n            list: [{ id: '0', name: '全部' }, { id: '1', name: '北京' }, { id: '2', name: '天津' }, { id: '3', name: '上海' }]\r\n        },\r\n        {\r\n            type: '时间查询'\r\n        },\r\n        {\r\n            type: 'SELECT',\r\n            label: '订单状态',\r\n            field:'order_status',\r\n            placeholder: '全部',\r\n            initialValue: '1',\r\n            width: 80,\r\n            list: [{ id: '0', name: '全部' }, { id: '1', name: '进行中' }, { id: '2', name: '结束行程' }]\r\n        }\r\n    ]\r\n    componentDidMount(){\r\n        this.requestList()\r\n    }\r\n\r\n    handleFilter = (params)=>{\r\n        this.params = params;\r\n        this.requestList();\r\n    }\r\n    requestList = ()=>{\r\n        axios.requestList(this,'/order/list',this.params,true)\r\n        // axios.ajax({\r\n        //     url:'/order/list',\r\n        //     data:{\r\n        //         params: this.params\r\n        //     }\r\n        // }).then((res)=>{\r\n        //     let list = res.result.item_list.map((item, index) => {\r\n        //         item.key = index;\r\n        //         return item;\r\n        //     });\r\n        //     this.setState({\r\n        //         list,\r\n        //         pagination: Utils.pagination(res, (current) => {\r\n        //             _this.params.page = current;\r\n        //             _this.requestList();\r\n        //         })\r\n        //     })\r\n        // })\r\n    }\r\n    // 订单结束确认\r\n    handleConfirm = ()=>{\r\n        let item = this.state.selectedItem;\r\n        if (!item) {\r\n            Modal.info({\r\n                title: '信息',\r\n                content: '请选择一条订单进行结束'\r\n            })\r\n            return;\r\n        }\r\n        axios.ajax({\r\n            url:'/order/ebike_info',\r\n            data:{\r\n                params:{\r\n                    orderId: item.id\r\n                }\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code ==0 ){\r\n                this.setState({\r\n                    orderInfo:res.result,\r\n                    orderConfirmVisble: true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    // 结束订单\r\n    handleFinishOrder = ()=>{\r\n        let item = this.state.selectedItem;\r\n        axios.ajax({\r\n            url: '/order/finish_order',\r\n            data: {\r\n                params: {\r\n                    orderId: item.id\r\n                }\r\n            }\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                message.success('订单结束成功')\r\n                this.setState({\r\n                    orderConfirmVisble: false\r\n                })\r\n                this.requestList();\r\n            }\r\n        })\r\n    }\r\n    onRowClick = (record, index) => {\r\n        let selectKey = [index];\r\n        this.setState({\r\n            selectedRowKeys: selectKey,\r\n            selectedItem: record\r\n        })\r\n    }\r\n\r\n    openOrderDetail = ()=>{\r\n        let item = this.state.selectedItem;\r\n        if (!item) {\r\n            Modal.info({\r\n                title: '信息',\r\n                content: '请先选择一条订单'\r\n            })\r\n            return;\r\n        }\r\n        window.open(`/#/common/order/detail/${item.id}`,'_blank')\r\n    }\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title:'订单编号',\r\n                dataIndex:'order_sn'\r\n            },\r\n            {\r\n                title: '车辆编号',\r\n                dataIndex: 'bike_sn'\r\n            },\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'user_name'\r\n            },\r\n            {\r\n                title: '手机号',\r\n                dataIndex: 'mobile'\r\n            },\r\n            {\r\n                title: '里程',\r\n                dataIndex: 'distance',\r\n                render(distance){\r\n                    return distance/1000 + 'Km';\r\n                }\r\n            },\r\n            {\r\n                title: '行驶时长',\r\n                dataIndex: 'total_time'\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'status'\r\n            },\r\n            {\r\n                title: '开始时间',\r\n                dataIndex: 'start_time'\r\n            },\r\n            {\r\n                title: '结束时间',\r\n                dataIndex: 'end_time'\r\n            },\r\n            {\r\n                title: '订单金额',\r\n                dataIndex: 'total_fee'\r\n            },\r\n            {\r\n                title: '实付金额',\r\n                dataIndex: 'user_pay'\r\n            }\r\n        ]\r\n        const formItemLayout = {\r\n            labelCol:{span:5},\r\n            wrapperCol:{span:19}\r\n        }\r\n        const selectedRowKeys = this.state.selectedRowKeys;\r\n        const rowSelection = {\r\n            type: 'radio',\r\n            selectedRowKeys\r\n        }\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <BaseForm formList={this.formList} filterSubmit={this.handleFilter}/>\r\n                </Card>\r\n                <Card style={{marginTop:10}}>\r\n                    <Button type=\"primary\" onClick={this.openOrderDetail}>订单详情</Button>\r\n                    <Button type=\"primary\" style={{marginLeft:10}} onClick={this.handleConfirm}>结束订单</Button>\r\n                </Card>\r\n                <div className=\"content-wrap\">\r\n                    <Table\r\n                        bordered\r\n                        columns={columns}\r\n                        dataSource={this.state.list}\r\n                        pagination={this.state.pagination}\r\n                        rowSelection={rowSelection}\r\n                        onRow={(record, index) => {\r\n                            return {\r\n                                onClick: () => {\r\n                                    this.onRowClick(record, index);\r\n                                }\r\n                            };\r\n                        }}\r\n                    />\r\n                </div>\r\n                <Modal\r\n                    title=\"结束订单\"\r\n                    visible={this.state.orderConfirmVisble}\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            orderConfirmVisble:false\r\n                        })\r\n                    }}\r\n                    onOk={this.handleFinishOrder}\r\n                    width={600}\r\n                >\r\n                    <Form layout=\"horizontal\">\r\n                        <FormItem label=\"车辆编号\" {...formItemLayout}>\r\n                            {this.state.orderInfo.bike_sn}\r\n                        </FormItem>\r\n                        <FormItem label=\"剩余电量\" {...formItemLayout}>\r\n                            {this.state.orderInfo.battery + '%'}\r\n                        </FormItem>\r\n                        <FormItem label=\"行程开始时间\" {...formItemLayout}>\r\n                            {this.state.orderInfo.start_time}\r\n                        </FormItem>\r\n                        <FormItem label=\"当前位置\" {...formItemLayout}>\r\n                            {this.state.orderInfo.location}\r\n                        </FormItem>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}